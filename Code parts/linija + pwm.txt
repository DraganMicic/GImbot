#include <built_in.h>

//char uart_rd;

int U3R;    //sve sto treba za ocitavanje
int U3;
int U2R;
int U2;
int U1R;
int U1;
int U4R;
int U4;
int U5R;
int U5;

float cnt1;        //promenljive za tajmere
float cnt2;
float cnt3;
float cnt4;
float cnt5;

float pwm1i;
float pwm2i;

int cal; //za granicu belo crno

void interrupt() {              //<<<<<<<<<<<<<<<<<<<<<<<odve su definisane Interapt finkcije i njih nigde ne kopiras same se pozivaju
     if (TMR0IF_bit) {
        cnt1=cnt1+1;                 // increment counter
        cnt2=cnt2+1;                    // increment counter
        cnt3=cnt3+1;
        cnt4=cnt4+1;                 // increment counter
        cnt5=cnt5+1;                    // increment counter

        TMR0IF_bit = 0;        // clear TMR0IF
        TMR0L = 0;             // set TMR0 for aproximetly 1 sec
     }
}

void pwm1(int t1up,int t1down){
  if (cnt1 <= t1up && pwm1i==1) {
      LATB5_bit = 1;
     // cnt1 = 0;
      cnt2 = 0;
    }
    else {pwm1i=0;}

      if (cnt2 <= t1down && pwm1i==0) {
         LATB5_bit = 0;
      cnt1 =0;

    }
    else {pwm1i=1;}
}

void pwm2(int t2up,int t2down){
 if (cnt3 <= t2up && pwm2i==1 ) {
      LATB6_bit = 1;
     // cnt1 = 0;
      cnt4 = 0;
    }
    else {pwm2i=0;}

      if (cnt4 <= t2down && pwm2i==0) {
      LATB6_bit = 0;
      cnt3 =0;

    }
   else {pwm2i=1;}
}
void mod(int c) {            //paljenje lampica
     switch(c){
               case 4: latD0_bit=1; break;
               case 3: latD1_bit=1; break;
               case 2: latD2_bit=1; break;
               case 1: latD3_bit=1; break;
               case 0: latD4_bit=1; break;
               case -1: latD5_bit=1; break;
               case -2: latD6_bit=1; break;
               case -3: latD7_bit=1; break;
               case -4: latE0_bit=1; break;
     }
}

void ridd (){                  //cita vrednosti sa line folow clicka

     U5R = ADC_Read(4);
     U4R = ADC_Read(3);
     U3R = ADC_Read(2);
     U2R = ADC_Read(1);
     U1R = ADC_Read(0);

     if (U1R > cal){U1 = 1;}
     if (U1R < cal){U1 = 0;}

     if (U2R > cal){U2 = 1;}
     if (U2R < cal){U2 = 0;}

     if (U3R > cal){U3 = 1;}
     if (U3R < cal){U3 = 0;}

     if (U4R > cal){U4 = 1;}
     if (U4R < cal){U4 = 0;}

     if (U5R > cal){U5 = 1;}
     if (U5R < cal){U5 = 0;}
}

preracunaj (){                               //pretvara u brojku od -4 do 4 stanje na senzoru
    if(U1==1 && U2==1 && U3==1 && U4==1 && U5==1){mod(0);}          //pravo
    if(U1==0 && U2==0 && U3==1 && U4==0 && U5==0){mod(0);}
    if(U1==0 && U2==1 && U3==1 && U4==1 && U5==0){mod(0);}

    if(U1==1 && U2==0 && U3==0 && U4==0 && U5==0){mod(4);}          //4 desno

    if(U1==1 && U2==1 && U3==0 && U4==0 && U5==0){mod(3);}          //3 desno

    if(U1==0 && U2==1 && U3==0 && U4==0 && U5==0){mod(2);}          //2 desno
    if(U1==1 && U2==1 && U3==1 && U4==0 && U5==0){mod(2);}

    if(U1==0 && U2==1 && U3==1 && U4==0 && U5==0){mod(1);}
    if(U1==1 && U2==1 && U3==1 && U4==1 && U5==0){mod(1);}          //1 desno

    if(U1==0 && U2==0 && U3==0 && U4==0 && U5==1){mod(-4);}          //4 levo

    if(U1==0 && U2==0 && U3==0 && U4==1 && U5==1){mod(-3);}          //3 levo

    if(U1==0 && U2==0 && U3==0 && U4==1 && U5==0){mod(-2);}          //2 levo
    if(U1==0 && U2==0 && U3==1 && U4==1 && U5==1){mod(-2);}

    if(U1==0 && U2==0 && U3==1 && U4==1 && U5==0){mod(-1);}          //1 levo
    if(U1==0 && U2==1 && U3==1 && U4==1 && U5==1){mod(-1);}
}

void all0 () { LATE=0x00;LATD=0x00;}   //port e i d na nulu

void main() {                                 //MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA///
  cal= 120;  //dal je crno il je belo

  cnt1 = 0;    //TAJMERII
  cnt2 =   0;
  cnt3 = 0;
  cnt4 = 0;
  cnt5 = 0;
  
  pwm1i=1;            //nesto za PWM
  pwm2i=1;
  
  ANSELA = 0x2F;             // Configure RA1 pin as analog         Jela sloncee <3
  TRISA = 0x2F;              // Set RA1 pin as input
  LATA=0x00;
  
  ANSELB = 0;              // Configure AN pins as digital
  TRISB  = 0;              // PORTB is output
  LATB = 0x00;
  
  ANSELC = 0;              // Configure AN pins as digital
  TRISC  = 0;              // PORTB is output
  LATC = 0x00;           // Initialize PORTB
  
  ANSELD = 0;              // Configure AN pins as digital
  TRISD  = 0;              // PORTB is output
  LATD = 0x00;
  
  ANSELE = 0;              // Configure AN pins as digital
  TRISE  = 0;              // PORTB is output
  LATE = 0xFF;
  
  INTCON = 0xC0;                   //setovanje tajmeraAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
  T0CON         = 0xC2;
  TMR0L         = 0;           // Set TMR0 to 8bit mode and prescaler to 256
  GIE_bit = 1;             // Enable global interrupt
  TMR0IE_bit = 1;          // Enable Timer0 interrupt


  //UART1_Init(9600);               // Initialize UART module at 9600 bps
  //Delay_ms(100);

  //UART1_Write(13);
  //UART1_Write(10);

  while (1) {

    ridd();
    preracunaj();


    //Delay_ms(10);
    //all0();
    
    pwm1(1,6);        //desni
    pwm2(1,6);       //levi



    if (cnt5 >= 1000) {
      LATD = ~PORTD;         // Toggle PORTB LEDs
      cnt5 = 0;                // Reset cnt
    }
    
    all0();

    //LATC = adc_rd;
    //LATD = Hi(adc_rd);

    //uart_rd = UART1_Read();     // read the received data,
    // UART1_Write(U5R);       // and send data via UART
    // UART1_Write(hi(U5R));


  }
}