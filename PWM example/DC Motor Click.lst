;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/6/2016 8:33:53 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EFDD  	GOTO        442
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x001C	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x001E	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x0020	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0022	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0024	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x0026	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x002A	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x002E	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x0030	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x0032	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x0036	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x003A	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x003C	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x003E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x0040	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x0042	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x0044	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x0046	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x0048	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x004A	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x004C	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x004E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x0050	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x0052	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x0054	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x0056	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x0058	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x005A	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x005E	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x0062	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x0066	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x006A	0x0012      	RETURN      0
; end of _Mul_16X16_U
_PWM2_Set_Duty:
;__Lib_PWM_c21.c,8 :: 		
;__Lib_PWM_c21.c,12 :: 		
0x006C	0x50BB      	MOVF        PR2, 0 
0x006E	0x0F01      	ADDLW       1
0x0070	0x6E00      	MOVWF       R0 
0x0072	0x6A01      	CLRF        R1 
0x0074	0x0E00      	MOVLW       0
0x0076	0x2201      	ADDWFC      R1, 1 
0x0078	0xF004C01E  	MOVFF       FARG_PWM2_Set_Duty_new_duty, R4
0x007C	0x0E00      	MOVLW       0
0x007E	0x6E05      	MOVWF       R5 
0x0080	0xDFCD      	RCALL       _Mul_16X16_U
0x0082	0x0E06      	MOVLW       6
0x0084	0x6E02      	MOVWF       R2 
0x0086	0xF004C000  	MOVFF       R0, R4
0x008A	0xF005C001  	MOVFF       R1, R5
0x008E	0x5002      	MOVF        R2, 0 
L__PWM2_Set_Duty2:
0x0090	0xE005      	BZ          L__PWM2_Set_Duty3
0x0092	0x3205      	RRCF        R5, 1 
0x0094	0x3204      	RRCF        R4, 1 
0x0096	0x9E05      	BCF         R5, 7 
0x0098	0x0FFF      	ADDLW       255
0x009A	0xD7FA      	BRA         L__PWM2_Set_Duty2
L__PWM2_Set_Duty3:
;__Lib_PWM_c21.c,13 :: 		
0x009C	0x0E04      	MOVLW       4
0x009E	0x6E01      	MOVWF       R1 
0x00A0	0xF000C004  	MOVFF       R4, R0
0x00A4	0x5001      	MOVF        R1, 0 
L__PWM2_Set_Duty4:
0x00A6	0xE004      	BZ          L__PWM2_Set_Duty5
0x00A8	0x3600      	RLCF        R0, 1 
0x00AA	0x9000      	BCF         R0, 0 
0x00AC	0x0FFF      	ADDLW       255
0x00AE	0xD7FB      	BRA         L__PWM2_Set_Duty4
L__PWM2_Set_Duty5:
0x00B0	0x0E30      	MOVLW       48
0x00B2	0x1400      	ANDWF       R0, 0 
0x00B4	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,14 :: 		
0x00B6	0xF000C004  	MOVFF       R4, R0
0x00BA	0xF001C005  	MOVFF       R5, R1
0x00BE	0x3201      	RRCF        R1, 1 
0x00C0	0x3200      	RRCF        R0, 1 
0x00C2	0x9E01      	BCF         R1, 7 
0x00C4	0x3201      	RRCF        R1, 1 
0x00C6	0x3200      	RRCF        R0, 1 
0x00C8	0x9E01      	BCF         R1, 7 
0x00CA	0xFF67C000  	MOVFF       R0, CCPR2L
;__Lib_PWM_c21.c,15 :: 		
0x00CE	0x0E0F      	MOVLW       15
0x00D0	0x1666      	ANDWF       CCP2CON, 1 
;__Lib_PWM_c21.c,16 :: 		
0x00D2	0x5003      	MOVF        R3, 0 
0x00D4	0x1266      	IORWF       CCP2CON, 1 
;__Lib_PWM_c21.c,17 :: 		
L_end_PWM2_Set_Duty:
0x00D6	0x0012      	RETURN      0
; end of _PWM2_Set_Duty
_PWM2_Init:
;__Lib_PWM_c21.c,1 :: 		
;__Lib_PWM_c21.c,2 :: 		
;__Lib_PWM_c21.c,3 :: 		
0x00D8	0x6A67      	CLRF        CCPR2L 
;__Lib_PWM_c21.c,4 :: 		
0x00DA	0x9866      	BCF         CCP2CON, 4 
;__Lib_PWM_c21.c,5 :: 		
0x00DC	0x9A66      	BCF         CCP2CON, 5 
;__Lib_PWM_c21.c,6 :: 		
L_end_PWM2_Init:
0x00DE	0x0012      	RETURN      0
; end of _PWM2_Init
_PWM2_Start:
;__Lib_PWM_c21.c,19 :: 		
;__Lib_PWM_c21.c,20 :: 		
0x00E0	0x9294      	BCF         TRISC1_bit, BitPos(TRISC1_bit+0) 
;__Lib_PWM_c21.c,21 :: 		
0x00E2	0x84BA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,22 :: 		
0x00E4	0x0E0C      	MOVLW       12
0x00E6	0x1266      	IORWF       CCP2CON, 1 
;__Lib_PWM_c21.c,23 :: 		
L_end_PWM2_Start:
0x00E8	0x0012      	RETURN      0
; end of _PWM2_Start
_Delay_500us:
;__Lib_Delays.c,27 :: 		void Delay_500us() {
;__Lib_Delays.c,28 :: 		Delay_us(498);
0x00EA	0x0E02      	MOVLW       2
0x00EC	0x6E0C      	MOVWF       R12, 0
0x00EE	0x0E49      	MOVLW       73
0x00F0	0x6E0D      	MOVWF       R13, 0
L_Delay_500us4:
0x00F2	0x2E0D      	DECFSZ      R13, 1, 0
0x00F4	0xD7FE      	BRA         L_Delay_500us4
0x00F6	0x2E0C      	DECFSZ      R12, 1, 0
0x00F8	0xD7FC      	BRA         L_Delay_500us4
0x00FA	0x0000      	NOP
0x00FC	0x0000      	NOP
;__Lib_Delays.c,29 :: 		}
L_end_Delay_500us:
0x00FE	0x0012      	RETURN      0
; end of _Delay_500us
_PWM_Setup:
;DC Motor Click.c,67 :: 		void PWM_Setup() {
;DC Motor Click.c,69 :: 		TRISC0_bit = 0;                    // Set RC0 as output
0x0100	0x9094      	BCF         TRISC0_bit, BitPos(TRISC0_bit+0) 
;DC Motor Click.c,70 :: 		current_duty = 0;                  // Initial value for current_duty
0x0102	0x6A15      	CLRF        _current_duty 
0x0104	0x6A16      	CLRF        _current_duty+1 
;DC Motor Click.c,71 :: 		PWM2_Init(5000);                   // Set PWM frequency/period (according to the DC motor characteristics)
0x0106	0x80BA      	BSF         T2CON, 0, 0
0x0108	0x92BA      	BCF         T2CON, 1, 0
0x010A	0x0E63      	MOVLW       99
0x010C	0x6EBB      	MOVWF       PR2, 0
0x010E	0xDFE4      	RCALL       _PWM2_Init
;DC Motor Click.c,72 :: 		PSTR1CON = 0x02;                   // Configure RC0
0x0110	0x0E02      	MOVLW       2
0x0112	0x6EB9      	MOVWF       PSTR1CON 
;DC Motor Click.c,73 :: 		PSTR2CON = 0x02;                   //   as PWM2 putput
0x0114	0x0E02      	MOVLW       2
0x0116	0x6E63      	MOVWF       PSTR2CON 
;DC Motor Click.c,74 :: 		PWM2_Set_Duty(current_duty);       // Set current duty for PWM
0x0118	0xF01EC015  	MOVFF       _current_duty, FARG_PWM2_Set_Duty_new_duty
0x011C	0xDFA7      	RCALL       _PWM2_Set_Duty
;DC Motor Click.c,75 :: 		PWM2_Start();                      // Start PWM
0x011E	0xDFE0      	RCALL       _PWM2_Start
;DC Motor Click.c,76 :: 		}
L_end_PWM_Setup:
0x0120	0x0012      	RETURN      0
; end of _PWM_Setup
_InitGPIO:
;DC Motor Click.c,45 :: 		void InitGPIO() {
;DC Motor Click.c,47 :: 		ANSELC = 0;
0x0122	0x010F      	MOVLB       15
0x0124	0x6B3A      	CLRF        ANSELC, 1
;DC Motor Click.c,48 :: 		ANSELD = 0;
0x0126	0x6B3B      	CLRF        ANSELD, 1
;DC Motor Click.c,49 :: 		ANSELE = 0;
0x0128	0x6B3C      	CLRF        ANSELE, 1
;DC Motor Click.c,52 :: 		TRISD0_bit = 1;
0x012A	0x8095      	BSF         TRISD0_bit, BitPos(TRISD0_bit+0) 
;DC Motor Click.c,53 :: 		TRISD1_bit = 1;
0x012C	0x8295      	BSF         TRISD1_bit, BitPos(TRISD1_bit+0) 
;DC Motor Click.c,56 :: 		TRISD7_bit = 1;
0x012E	0x8E95      	BSF         TRISD7_bit, BitPos(TRISD7_bit+0) 
;DC Motor Click.c,57 :: 		TRISD6_bit = 1;
0x0130	0x8C95      	BSF         TRISD6_bit, BitPos(TRISD6_bit+0) 
;DC Motor Click.c,58 :: 		TRISD5_bit = 1;
0x0132	0x8A95      	BSF         TRISD5_bit, BitPos(TRISD5_bit+0) 
;DC Motor Click.c,59 :: 		TRISD4_bit = 1;
0x0134	0x8895      	BSF         TRISD4_bit, BitPos(TRISD4_bit+0) 
;DC Motor Click.c,62 :: 		SEL1_Direction = 0;
0x0136	0x9296      	BCF         TRISE1_bit, BitPos(TRISE1_bit+0) 
;DC Motor Click.c,63 :: 		SEL2_Direction = 0;
0x0138	0x9096      	BCF         TRISE0_bit, BitPos(TRISE0_bit+0) 
;DC Motor Click.c,64 :: 		}
L_end_InitGPIO:
0x013A	0x0012      	RETURN      0
; end of _InitGPIO
_Button:
;__Lib_Button.c,6 :: 		
;__Lib_Button.c,8 :: 		
0x013C	0x6A1D      	CLRF        Button_rslt_L0 
;__Lib_Button.c,11 :: 		
0x013E	0xF001C019  	MOVFF       FARG_Button_pin, R1
0x0142	0x0E01      	MOVLW       1
0x0144	0x6E00      	MOVWF       R0 
0x0146	0x5001      	MOVF        R1, 0 
L__Button5:
0x0148	0xE004      	BZ          L__Button6
0x014A	0x3600      	RLCF        R0, 1 
0x014C	0x9000      	BCF         R0, 0 
0x014E	0x0FFF      	ADDLW       255
0x0150	0xD7FB      	BRA         L__Button5
L__Button6:
0x0152	0xF01CC000  	MOVFF       R0, Button_pMask_L0
;__Lib_Button.c,13 :: 		
0x0156	0xFFE9C017  	MOVFF       FARG_Button_port, FSR0L
0x015A	0xFFEAC018  	MOVFF       FARG_Button_port+1, FSR0H
0x015E	0x5000      	MOVF        R0, 0 
0x0160	0x14EE      	ANDWF       POSTINC0, 0 
0x0162	0x6E01      	MOVWF       R1 
0x0164	0x5201      	MOVF        R1, 1 
0x0166	0x0E01      	MOVLW       1
0x0168	0xA4D8      	BTFSS       STATUS, 2 
0x016A	0x0E00      	MOVLW       0
0x016C	0x6E00      	MOVWF       R0 
0x016E	0x501B      	MOVF        FARG_Button_active_state, 0 
0x0170	0x1A00      	XORWF       R0, 1 
0x0172	0xE018      	BZ          L_Button0
;__Lib_Button.c,15 :: 		
L_Button1:
0x0174	0x501A      	MOVF        FARG_Button_time_ms, 0 
0x0176	0x0800      	SUBLW       0
0x0178	0xE204      	BC          L_Button2
;__Lib_Button.c,16 :: 		
0x017A	0xDFB7      	RCALL       _Delay_500us
;__Lib_Button.c,17 :: 		
0x017C	0xDFB6      	RCALL       _Delay_500us
;__Lib_Button.c,18 :: 		
0x017E	0x061A      	DECF        FARG_Button_time_ms, 1 
;__Lib_Button.c,19 :: 		
0x0180	0xD7F9      	BRA         L_Button1
L_Button2:
;__Lib_Button.c,21 :: 		
0x0182	0xFFE9C017  	MOVFF       FARG_Button_port, FSR0L
0x0186	0xFFEAC018  	MOVFF       FARG_Button_port+1, FSR0H
0x018A	0x501C      	MOVF        Button_pMask_L0, 0 
0x018C	0x14EE      	ANDWF       POSTINC0, 0 
0x018E	0x6E01      	MOVWF       R1 
0x0190	0x5201      	MOVF        R1, 1 
0x0192	0x0E01      	MOVLW       1
0x0194	0xA4D8      	BTFSS       STATUS, 2 
0x0196	0x0E00      	MOVLW       0
0x0198	0x6E00      	MOVWF       R0 
0x019A	0x501B      	MOVF        FARG_Button_active_state, 0 
0x019C	0x1A00      	XORWF       R0, 1 
0x019E	0xE002      	BZ          L_Button3
;__Lib_Button.c,22 :: 		
0x01A0	0x0EFF      	MOVLW       255
0x01A2	0x6E1D      	MOVWF       Button_rslt_L0 
L_Button3:
;__Lib_Button.c,23 :: 		
L_Button0:
;__Lib_Button.c,25 :: 		
0x01A4	0xF000C01D  	MOVFF       Button_rslt_L0, R0
;__Lib_Button.c,26 :: 		
L_end_Button:
0x01A8	0x0012      	RETURN      0
; end of _Button
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x01AA	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x01AC	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x01B0	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x01B2	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x01B4	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x01B6	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x01B8	0x0012      	RETURN      0
; end of ___CC2DW
_main:
;DC Motor Click.c,78 :: 		void main() {
;DC Motor Click.c,80 :: 		InitGPIO();
0x01BA	0xDFB3      	RCALL       _InitGPIO
;DC Motor Click.c,83 :: 		PWM_Setup();
0x01BC	0xDFA1      	RCALL       _PWM_Setup
;DC Motor Click.c,86 :: 		SEL1 = 0;
0x01BE	0x928D      	BCF         LATE1_bit, BitPos(LATE1_bit+0) 
;DC Motor Click.c,87 :: 		SEL2 = 0;
0x01C0	0x908D      	BCF         LATE0_bit, BitPos(LATE0_bit+0) 
;DC Motor Click.c,89 :: 		while (1) {
L_main0:
;DC Motor Click.c,91 :: 		if (Button(&PORTD, 7, 1, 1)) {
0x01C2	0x0E83      	MOVLW       PORTD
0x01C4	0x6E17      	MOVWF       FARG_Button_port 
0x01C6	0x0E0F      	MOVLW       hi_addr(PORTD)
0x01C8	0x6E18      	MOVWF       FARG_Button_port+1 
0x01CA	0x0E07      	MOVLW       7
0x01CC	0x6E19      	MOVWF       FARG_Button_pin 
0x01CE	0x0E01      	MOVLW       1
0x01D0	0x6E1A      	MOVWF       FARG_Button_time_ms 
0x01D2	0x0E01      	MOVLW       1
0x01D4	0x6E1B      	MOVWF       FARG_Button_active_state 
0x01D6	0xDFB2      	RCALL       _Button
0x01D8	0x5200      	MOVF        R0, 1 
0x01DA	0xE002      	BZ          L_main2
;DC Motor Click.c,92 :: 		SEL1 = 0;
0x01DC	0x928D      	BCF         LATE1_bit, BitPos(LATE1_bit+0) 
;DC Motor Click.c,93 :: 		SEL2 = 0;
0x01DE	0x908D      	BCF         LATE0_bit, BitPos(LATE0_bit+0) 
;DC Motor Click.c,94 :: 		}
L_main2:
;DC Motor Click.c,97 :: 		if (Button(&PORTD, 6, 1, 1)) {
0x01E0	0x0E83      	MOVLW       PORTD
0x01E2	0x6E17      	MOVWF       FARG_Button_port 
0x01E4	0x0E0F      	MOVLW       hi_addr(PORTD)
0x01E6	0x6E18      	MOVWF       FARG_Button_port+1 
0x01E8	0x0E06      	MOVLW       6
0x01EA	0x6E19      	MOVWF       FARG_Button_pin 
0x01EC	0x0E01      	MOVLW       1
0x01EE	0x6E1A      	MOVWF       FARG_Button_time_ms 
0x01F0	0x0E01      	MOVLW       1
0x01F2	0x6E1B      	MOVWF       FARG_Button_active_state 
0x01F4	0xDFA3      	RCALL       _Button
0x01F6	0x5200      	MOVF        R0, 1 
0x01F8	0xE002      	BZ          L_main3
;DC Motor Click.c,98 :: 		SEL1 = 0;
0x01FA	0x928D      	BCF         LATE1_bit, BitPos(LATE1_bit+0) 
;DC Motor Click.c,99 :: 		SEL2 = 1;
0x01FC	0x808D      	BSF         LATE0_bit, BitPos(LATE0_bit+0) 
;DC Motor Click.c,100 :: 		}
L_main3:
;DC Motor Click.c,103 :: 		if (Button(&PORTD, 5, 1, 1)) {
0x01FE	0x0E83      	MOVLW       PORTD
0x0200	0x6E17      	MOVWF       FARG_Button_port 
0x0202	0x0E0F      	MOVLW       hi_addr(PORTD)
0x0204	0x6E18      	MOVWF       FARG_Button_port+1 
0x0206	0x0E05      	MOVLW       5
0x0208	0x6E19      	MOVWF       FARG_Button_pin 
0x020A	0x0E01      	MOVLW       1
0x020C	0x6E1A      	MOVWF       FARG_Button_time_ms 
0x020E	0x0E01      	MOVLW       1
0x0210	0x6E1B      	MOVWF       FARG_Button_active_state 
0x0212	0xDF94      	RCALL       _Button
0x0214	0x5200      	MOVF        R0, 1 
0x0216	0xE002      	BZ          L_main4
;DC Motor Click.c,104 :: 		SEL1 = 1;
0x0218	0x828D      	BSF         LATE1_bit, BitPos(LATE1_bit+0) 
;DC Motor Click.c,105 :: 		SEL2 = 1;
0x021A	0x808D      	BSF         LATE0_bit, BitPos(LATE0_bit+0) 
;DC Motor Click.c,106 :: 		}
L_main4:
;DC Motor Click.c,109 :: 		if (Button(&PORTD, 4, 1, 1)) {
0x021C	0x0E83      	MOVLW       PORTD
0x021E	0x6E17      	MOVWF       FARG_Button_port 
0x0220	0x0E0F      	MOVLW       hi_addr(PORTD)
0x0222	0x6E18      	MOVWF       FARG_Button_port+1 
0x0224	0x0E04      	MOVLW       4
0x0226	0x6E19      	MOVWF       FARG_Button_pin 
0x0228	0x0E01      	MOVLW       1
0x022A	0x6E1A      	MOVWF       FARG_Button_time_ms 
0x022C	0x0E01      	MOVLW       1
0x022E	0x6E1B      	MOVWF       FARG_Button_active_state 
0x0230	0xDF85      	RCALL       _Button
0x0232	0x5200      	MOVF        R0, 1 
0x0234	0xE002      	BZ          L_main5
;DC Motor Click.c,110 :: 		SEL1 = 1;
0x0236	0x828D      	BSF         LATE1_bit, BitPos(LATE1_bit+0) 
;DC Motor Click.c,111 :: 		SEL2 = 0;
0x0238	0x908D      	BCF         LATE0_bit, BitPos(LATE0_bit+0) 
;DC Motor Click.c,112 :: 		}
L_main5:
;DC Motor Click.c,115 :: 		if (Button(&PORTD, 1, 5, 1)) {            //  If RD1 button pressed
0x023A	0x0E83      	MOVLW       PORTD
0x023C	0x6E17      	MOVWF       FARG_Button_port 
0x023E	0x0E0F      	MOVLW       hi_addr(PORTD)
0x0240	0x6E18      	MOVWF       FARG_Button_port+1 
0x0242	0x0E01      	MOVLW       1
0x0244	0x6E19      	MOVWF       FARG_Button_pin 
0x0246	0x0E05      	MOVLW       5
0x0248	0x6E1A      	MOVWF       FARG_Button_time_ms 
0x024A	0x0E01      	MOVLW       1
0x024C	0x6E1B      	MOVWF       FARG_Button_active_state 
0x024E	0xDF76      	RCALL       _Button
0x0250	0x5200      	MOVF        R0, 1 
0x0252	0xE005      	BZ          L_main6
;DC Motor Click.c,116 :: 		current_duty = current_duty + 1;        //    increment current_duty
0x0254	0x4A15      	INFSNZ      _current_duty, 1 
0x0256	0x2A16      	INCF        _current_duty+1, 1 
;DC Motor Click.c,117 :: 		PWM2_Set_Duty(current_duty);            //  set newly acquired duty ratio
0x0258	0xF01EC015  	MOVFF       _current_duty, FARG_PWM2_Set_Duty_new_duty
0x025C	0xDF07      	RCALL       _PWM2_Set_Duty
;DC Motor Click.c,118 :: 		}
L_main6:
;DC Motor Click.c,121 :: 		if (Button(&PORTD, 0, 5, 1)) {            // If RD0 button pressed
0x025E	0x0E83      	MOVLW       PORTD
0x0260	0x6E17      	MOVWF       FARG_Button_port 
0x0262	0x0E0F      	MOVLW       hi_addr(PORTD)
0x0264	0x6E18      	MOVWF       FARG_Button_port+1 
0x0266	0x6A19      	CLRF        FARG_Button_pin 
0x0268	0x0E05      	MOVLW       5
0x026A	0x6E1A      	MOVWF       FARG_Button_time_ms 
0x026C	0x0E01      	MOVLW       1
0x026E	0x6E1B      	MOVWF       FARG_Button_active_state 
0x0270	0xDF65      	RCALL       _Button
0x0272	0x5200      	MOVF        R0, 1 
0x0274	0xE007      	BZ          L_main7
;DC Motor Click.c,122 :: 		current_duty = current_duty - 1;        //   decrement current_duty
0x0276	0x0E01      	MOVLW       1
0x0278	0x5E15      	SUBWF       _current_duty, 1 
0x027A	0x0E00      	MOVLW       0
0x027C	0x5A16      	SUBWFB      _current_duty+1, 1 
;DC Motor Click.c,123 :: 		PWM2_Set_Duty(current_duty);            // set newly acquired duty ratio
0x027E	0xF01EC015  	MOVFF       _current_duty, FARG_PWM2_Set_Duty_new_duty
0x0282	0xDEF4      	RCALL       _PWM2_Set_Duty
;DC Motor Click.c,124 :: 		}
L_main7:
;DC Motor Click.c,125 :: 		}
0x0284	0xD79E      	BRA         L_main0
;DC Motor Click.c,126 :: 		}
L_end_main:
0x0286	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [80]    _Mul_16X16_U
0x006C     [108]    _PWM2_Set_Duty
0x00D8       [8]    _PWM2_Init
0x00E0      [10]    _PWM2_Start
0x00EA      [22]    _Delay_500us
0x0100      [34]    _PWM_Setup
0x0122      [26]    _InitGPIO
0x013C     [110]    _Button
0x01AA      [16]    ___CC2DW
0x01BA     [206]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    UART2_Init_tmp_L0
0x0000       [1]    SPI2_Write_tmp_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    R0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    I2C2_Rd_tmp_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    UART2_Read___tmp_UART2_Read_L0
0x0001       [1]    FLASH_Write_64_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    R1
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0002       [1]    FLASH_Write_64_SaveINTCON_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    R2
0x0002       [2]    memchr_s_L0
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [1]    R3
0x0003       [1]    MM_Init_i_L0
0x0003       [2]    memmove_tt_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [1]    R4
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0004       [2]    memcpy_ss_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    R5
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0006       [1]    R6
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _current_duty
0x0017       [2]    FARG_Button_port
0x0019       [1]    FARG_Button_pin
0x001A       [1]    FARG_Button_time_ms
0x001B       [1]    FARG_Button_active_state
0x001C       [1]    Button_pMask_L0
0x001D       [1]    Button_rslt_L0
0x001E       [4]    FARG_PWM2_Init_PWM_Freq
0x001E       [1]    FARG_PWM2_Set_Duty_new_duty
0x0F3A       [1]    ANSELC
0x0F3B       [1]    ANSELD
0x0F3C       [1]    ANSELE
0x0F63       [1]    PSTR2CON
0x0F66       [1]    CCP2CON
0x0F67       [1]    CCPR2L
0x0F83       [1]    PORTD
0x0F8D       [0]    LATE0_bit
0x0F8D       [0]    LATE1_bit
0x0F8D       [0]    SEL1
0x0F8D       [0]    SEL2
0x0F94       [0]    TRISC1_bit
0x0F94       [0]    TRISC0_bit
0x0F95       [0]    TRISD1_bit
0x0F95       [0]    TRISD0_bit
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD5_bit
0x0F96       [0]    SEL2_Direction
0x0F96       [0]    TRISE1_bit
0x0F96       [0]    SEL1_Direction
0x0F96       [0]    TRISE0_bit
0x0FB9       [1]    PSTR1CON
0x0FBA       [1]    T2CON
0x0FBB       [1]    PR2
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
